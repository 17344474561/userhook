{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs';\nimport { loginData } from \"../reducer/login\";\nconsole.log(loginData); // 添加请求拦截器\n\naxios.interceptors.request.use(config => {\n  const obj = qs.parse(config.data);\n  obj.token = 2222;\n  config.data = qs.stringify(obj);\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 添加响应拦截器\n\naxios.interceptors.response.use(response => {\n  // 根据状态码跳转\n  if (response.status === 200) {// window.location.href = 'https://www.baidu.com'\n  }\n\n  return response;\n}, error => {\n  switch (error.response.status) {\n    case 404:\n      // window.location.href = 'https://www.baidu.com'\n      break;\n\n    default:\n      break;\n  }\n\n  return Promise.reject(error);\n}); // post\n\nexport function post(url, data) {\n  return new Promise((resolve, reject) => {\n    axios({\n      url,\n      method: 'POST',\n      // 添加公共的请求头\n      // headers: { token: '3333333333333' },\n      data: qs.stringify(data)\n    }).then(res => resolve(res.data)).catch(err => console.log(err));\n  });\n} // get\n\nexport function get(url, data = '') {\n  return new Promise((resolve, reject) => {\n    axios({\n      url,\n      method: 'GET',\n      // 添加公共的请求头\n      // headers: { token: '' },\n      params: ''\n    }).then(res => resolve(res.data)).catch(err => console.log(err));\n  });\n}","map":{"version":3,"sources":["/Users/mac/Desktop/react/backstage/src/uilts/request.js"],"names":["axios","qs","loginData","console","log","interceptors","request","use","config","obj","parse","data","token","stringify","error","Promise","reject","response","status","post","url","resolve","method","then","res","catch","err","get","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEAC,OAAO,CAACC,GAAR,CAAYF,SAAZ,E,CACA;;AACAF,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACvC,QAAMC,GAAG,GAAGR,EAAE,CAACS,KAAH,CAASF,MAAM,CAACG,IAAhB,CAAZ;AACAF,EAAAA,GAAG,CAACG,KAAJ,GAAY,IAAZ;AACAJ,EAAAA,MAAM,CAACG,IAAP,GAAcV,EAAE,CAACY,SAAH,CAAaJ,GAAb,CAAd;AACA,SAAOD,MAAP;AAED,CAND,EAMGM,KAAK,IAAI;AACV;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATD,E,CAWA;;AACAd,KAAK,CAACK,YAAN,CAAmBY,QAAnB,CAA4BV,GAA5B,CAAgCU,QAAQ,IAAI;AAC1C;AACA,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,CAC3B;AACD;;AACD,SAAOD,QAAP;AACD,CAND,EAMGH,KAAK,IAAI;AACV,UAAQA,KAAK,CAACG,QAAN,CAAeC,MAAvB;AACE,SAAK,GAAL;AACE;AACA;;AAEF;AACE;AANJ;;AAQA,SAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAhBD,E,CAmBA;;AACA,OAAO,SAASK,IAAT,CAAeC,GAAf,EAAoBT,IAApB,EAA0B;AAC/B,SAAO,IAAII,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;AACtChB,IAAAA,KAAK,CAAC;AACJoB,MAAAA,GADI;AAEJE,MAAAA,MAAM,EAAE,MAFJ;AAGJ;AACA;AACAX,MAAAA,IAAI,EAAEV,EAAE,CAACY,SAAH,CAAaF,IAAb;AALF,KAAD,CAAL,CAOGY,IAPH,CAOQC,GAAG,IAAIH,OAAO,CAACG,GAAG,CAACb,IAAL,CAPtB,EAQGc,KARH,CAQSC,GAAG,IAAIvB,OAAO,CAACC,GAAR,CAAYsB,GAAZ,CARhB;AASD,GAVM,CAAP;AAWD,C,CAED;;AACA,OAAO,SAASC,GAAT,CAAcP,GAAd,EAAmBT,IAAI,GAAG,EAA1B,EAA8B;AACnC,SAAO,IAAII,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;AACtChB,IAAAA,KAAK,CAAC;AACJoB,MAAAA,GADI;AAEJE,MAAAA,MAAM,EAAE,KAFJ;AAGJ;AACA;AACAM,MAAAA,MAAM,EAAE;AALJ,KAAD,CAAL,CAOGL,IAPH,CAOQC,GAAG,IAAIH,OAAO,CAACG,GAAG,CAACb,IAAL,CAPtB,EAQGc,KARH,CAQSC,GAAG,IAAIvB,OAAO,CAACC,GAAR,CAAYsB,GAAZ,CARhB;AASD,GAVM,CAAP;AAWD","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\nimport { loginData } from \"../reducer/login\"\n\nconsole.log(loginData)\n// 添加请求拦截器\naxios.interceptors.request.use(config => {\n  const obj = qs.parse(config.data)\n  obj.token = 2222\n  config.data = qs.stringify(obj)\n  return config\n\n}, error => {\n  // 对请求错误做些什么\n  return Promise.reject(error)\n})\n\n// 添加响应拦截器\naxios.interceptors.response.use(response => {\n  // 根据状态码跳转\n  if (response.status === 200) {\n    // window.location.href = 'https://www.baidu.com'\n  }\n  return response;\n}, error => {\n  switch (error.response.status) {\n    case 404:\n      // window.location.href = 'https://www.baidu.com'\n      break;\n    \n    default:\n      break;\n  }\n  return Promise.reject(error);\n});\n\n\n// post\nexport function post (url, data) {\n  return new Promise((resolve, reject) => {\n    axios({\n      url,\n      method: 'POST',\n      // 添加公共的请求头\n      // headers: { token: '3333333333333' },\n      data: qs.stringify(data),\n    })\n      .then(res => resolve(res.data))\n      .catch(err => console.log(err))\n  })\n}\n\n// get\nexport function get (url, data = '') {\n  return new Promise((resolve, reject) => {\n    axios({\n      url,\n      method: 'GET',\n      // 添加公共的请求头\n      // headers: { token: '' },\n      params: '',\n    })\n      .then(res => resolve(res.data))\n      .catch(err => console.log(err))\n  })\n}"]},"metadata":{},"sourceType":"module"}