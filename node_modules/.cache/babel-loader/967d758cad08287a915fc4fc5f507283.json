{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs';\nimport { connect } from 'react-redux';\nconsole.log(loginData);\nconnect(({\n  loginData\n}) => {\n  return {\n    loginData: loginData.data\n  };\n}); // 添加请求拦截器\n\naxios.interceptors.request.use(config => {\n  const obj = qs.parse(config.data);\n  obj.token = 2222;\n  config.data = qs.stringify(obj);\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 添加响应拦截器\n\naxios.interceptors.response.use(response => {\n  // 根据状态码跳转\n  if (response.status === 200) {// window.location.href = 'https://www.baidu.com'\n  }\n\n  return response;\n}, error => {\n  switch (error.response.status) {\n    case 404:\n      // window.location.href = 'https://www.baidu.com'\n      break;\n\n    default:\n      break;\n  }\n\n  return Promise.reject(error);\n}); // post\n\nexport function post(url, data) {\n  return new Promise((resolve, reject) => {\n    axios({\n      url,\n      method: 'POST',\n      // 添加公共的请求头\n      // headers: { token: '3333333333333' },\n      data: qs.stringify(data)\n    }).then(res => resolve(res.data)).catch(err => console.log(err));\n  });\n} // get\n\nexport function get(url, data = '') {\n  return new Promise((resolve, reject) => {\n    axios({\n      url,\n      method: 'GET',\n      // 添加公共的请求头\n      // headers: { token: '' },\n      params: ''\n    }).then(res => resolve(res.data)).catch(err => console.log(err));\n  });\n}","map":{"version":3,"sources":["/Users/mac/Desktop/react/backstage/src/uilts/request.js"],"names":["axios","qs","connect","console","log","loginData","data","interceptors","request","use","config","obj","parse","token","stringify","error","Promise","reject","response","status","post","url","resolve","method","then","res","catch","err","get","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEAC,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAH,OAAO,CAAE,CAAC;AAACG,EAAAA;AAAD,CAAD,KAAiB;AACxB,SAAO;AACLA,IAAAA,SAAS,EAACA,SAAS,CAACC;AADf,GAAP;AAGD,CAJM,CAAP,C,CAKA;;AACAN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACvC,QAAMC,GAAG,GAAGV,EAAE,CAACW,KAAH,CAASF,MAAM,CAACJ,IAAhB,CAAZ;AACAK,EAAAA,GAAG,CAACE,KAAJ,GAAY,IAAZ;AACAH,EAAAA,MAAM,CAACJ,IAAP,GAAcL,EAAE,CAACa,SAAH,CAAaH,GAAb,CAAd;AACA,SAAOD,MAAP;AAED,CAND,EAMGK,KAAK,IAAI;AACV;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATD,E,CAWA;;AACAf,KAAK,CAACO,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CAAgCS,QAAQ,IAAI;AAC1C;AACA,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,CAC3B;AACD;;AACD,SAAOD,QAAP;AACD,CAND,EAMGH,KAAK,IAAI;AACV,UAAQA,KAAK,CAACG,QAAN,CAAeC,MAAvB;AACE,SAAK,GAAL;AACE;AACA;;AAEF;AACE;AANJ;;AAQA,SAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAhBD,E,CAmBA;;AACA,OAAO,SAASK,IAAT,CAAeC,GAAf,EAAoBf,IAApB,EAA0B;AAC/B,SAAO,IAAIU,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;AACtCjB,IAAAA,KAAK,CAAC;AACJqB,MAAAA,GADI;AAEJE,MAAAA,MAAM,EAAE,MAFJ;AAGJ;AACA;AACAjB,MAAAA,IAAI,EAAEL,EAAE,CAACa,SAAH,CAAaR,IAAb;AALF,KAAD,CAAL,CAOGkB,IAPH,CAOQC,GAAG,IAAIH,OAAO,CAACG,GAAG,CAACnB,IAAL,CAPtB,EAQGoB,KARH,CAQSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CARhB;AASD,GAVM,CAAP;AAWD,C,CAED;;AACA,OAAO,SAASC,GAAT,CAAcP,GAAd,EAAmBf,IAAI,GAAG,EAA1B,EAA8B;AACnC,SAAO,IAAIU,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;AACtCjB,IAAAA,KAAK,CAAC;AACJqB,MAAAA,GADI;AAEJE,MAAAA,MAAM,EAAE,KAFJ;AAGJ;AACA;AACAM,MAAAA,MAAM,EAAE;AALJ,KAAD,CAAL,CAOGL,IAPH,CAOQC,GAAG,IAAIH,OAAO,CAACG,GAAG,CAACnB,IAAL,CAPtB,EAQGoB,KARH,CAQSC,GAAG,IAAIxB,OAAO,CAACC,GAAR,CAAYuB,GAAZ,CARhB;AASD,GAVM,CAAP;AAWD","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\nimport { connect } from 'react-redux'\n\nconsole.log(loginData)\nconnect (({loginData}) => {\n  return {\n    loginData:loginData.data\n  }\n})\n// 添加请求拦截器\naxios.interceptors.request.use(config => {\n  const obj = qs.parse(config.data)\n  obj.token = 2222\n  config.data = qs.stringify(obj)\n  return config\n\n}, error => {\n  // 对请求错误做些什么\n  return Promise.reject(error)\n})\n\n// 添加响应拦截器\naxios.interceptors.response.use(response => {\n  // 根据状态码跳转\n  if (response.status === 200) {\n    // window.location.href = 'https://www.baidu.com'\n  }\n  return response;\n}, error => {\n  switch (error.response.status) {\n    case 404:\n      // window.location.href = 'https://www.baidu.com'\n      break;\n    \n    default:\n      break;\n  }\n  return Promise.reject(error);\n});\n\n\n// post\nexport function post (url, data) {\n  return new Promise((resolve, reject) => {\n    axios({\n      url,\n      method: 'POST',\n      // 添加公共的请求头\n      // headers: { token: '3333333333333' },\n      data: qs.stringify(data),\n    })\n      .then(res => resolve(res.data))\n      .catch(err => console.log(err))\n  })\n}\n\n// get\nexport function get (url, data = '') {\n  return new Promise((resolve, reject) => {\n    axios({\n      url,\n      method: 'GET',\n      // 添加公共的请求头\n      // headers: { token: '' },\n      params: '',\n    })\n      .then(res => resolve(res.data))\n      .catch(err => console.log(err))\n  })\n}\n\n"]},"metadata":{},"sourceType":"module"}